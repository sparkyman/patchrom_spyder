*** /home/dhacker29/patchrom/spyder/temp/dst_smali_orig/framework.jar.out/smali/android/content/ContentService.smali	2012-03-23 19:36:27.298178766 -0500
--- /home/dhacker29/patchrom/spyder/temp/dst_smali_orig/framework.jar.out/smali/android/content/ContentService.smali.original	2012-03-23 19:34:45.120315555 -0500
***************
*** 35,42 ****
--- 35,44 ----
      .parameter "factoryTest"
  
      .prologue
+     .line 131
      invoke-direct {p0}, Landroid/content/IContentService$Stub;-><init>()V
  
+     .line 47
      new-instance v0, Landroid/content/ContentService$ObserverNode;
  
      const-string v1, ""
***************
*** 45,66 ****
--- 47,74 ----
  
      iput-object v0, p0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
  
+     .line 48
      const/4 v0, 0x0
  
      iput-object v0, p0, Landroid/content/ContentService;->mSyncManager:Landroid/content/SyncManager;
  
+     .line 49
      new-instance v0, Ljava/lang/Object;
  
      invoke-direct {v0}, Ljava/lang/Object;-><init>()V
  
      iput-object v0, p0, Landroid/content/ContentService;->mSyncManagerLock:Ljava/lang/Object;
  
+     .line 132
      iput-object p1, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
+     .line 133
      iput-boolean p2, p0, Landroid/content/ContentService;->mFactoryTest:Z
  
+     .line 134
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
+     .line 135
      return-void
  .end method
  
***************
*** 68,77 ****
--- 76,87 ----
      .locals 5
  
      .prologue
+     .line 52
      iget-object v2, p0, Landroid/content/ContentService;->mSyncManagerLock:Ljava/lang/Object;
  
      monitor-enter v2
  
+     .line 55
      :try_start_0
      iget-object v1, p0, Landroid/content/ContentService;->mSyncManager:Landroid/content/SyncManager;
  
***************
*** 90,95 ****
--- 100,106 ----
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
      .catch Landroid/database/sqlite/SQLiteException; {:try_start_0 .. :try_end_0} :catch_0
  
+     .line 59
      :cond_0
      :goto_0
      :try_start_1
***************
*** 99,107 ****
--- 110,120 ----
  
      return-object v1
  
+     .line 56
      :catch_0
      move-exception v0
  
+     .line 57
      .local v0, e:Landroid/database/sqlite/SQLiteException;
      const-string v1, "ContentService"
  
***************
*** 111,116 ****
--- 124,130 ----
  
      goto :goto_0
  
+     .line 60
      .end local v0           #e:Landroid/database/sqlite/SQLiteException;
      :catchall_0
      move-exception v1
***************
*** 128,142 ****
--- 142,159 ----
      .parameter "factoryTest"
  
      .prologue
+     .line 495
      new-instance v0, Landroid/content/ContentService;
  
      invoke-direct {v0, p0, p1}, Landroid/content/ContentService;-><init>(Landroid/content/Context;Z)V
  
+     .line 496
      .local v0, service:Landroid/content/ContentService;
      const-string v1, "content"
  
      invoke-static {v1, v0}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
  
+     .line 497
      return-object v0
  .end method
  
***************
*** 150,167 ****
      .parameter "pollFrequency"
  
      .prologue
      iget-object v0, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v1, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string v2, "no permission to write the sync settings"
  
      invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v6
  
      .local v6, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
--- 167,187 ----
      .parameter "pollFrequency"
  
      .prologue
+     .line 318
      iget-object v0, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v1, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string/jumbo v2, "no permission to write the sync settings"
  
      invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 320
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v6
  
+     .line 322
      .local v6, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
***************
*** 184,193 ****
--- 204,216 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 325
      invoke-static {v6, v7}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 327
      return-void
  
+     .line 325
      :catchall_0
      move-exception v0
  
***************
*** 202,222 ****
--- 225,249 ----
      .parameter "callback"
  
      .prologue
+     .line 471
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 473
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 474
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      if-eqz p2, :cond_0
  
+     .line 475
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 225,235 ****
--- 252,265 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 478
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 480
      return-void
  
+     .line 478
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 245,274 ****
--- 275,312 ----
      .parameter "authority"
  
      .prologue
+     .line 257
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 259
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 260
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 261
      invoke-virtual {v2, p1, p2}, Landroid/content/SyncManager;->clearScheduledSyncOperations(Landroid/accounts/Account;Ljava/lang/String;)V
  
+     .line 262
      invoke-virtual {v2, p1, p2}, Landroid/content/SyncManager;->cancelActiveSync(Landroid/accounts/Account;Ljava/lang/String;)V
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 265
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 267
      return-void
  
+     .line 265
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 285,290 ****
--- 323,329 ----
      .parameter "args"
  
      .prologue
+     .line 65
      monitor-enter p0
  
      :try_start_0
***************
*** 298,309 ****
--- 337,350 ----
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 70
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_1
  
      move-result-wide v11
  
+     .line 72
      .local v11, identityToken:J
      :try_start_1
      move-object/from16 v0, p0
***************
*** 312,332 ****
--- 353,377 ----
  
      if-nez v2, :cond_0
  
+     .line 73
      const-string v2, "No SyncManager created!  (Disk full?)"
  
      move-object/from16 v0, p2
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
  
+     .line 77
      :goto_0
      invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
  
+     .line 78
      const-string v2, "Observer tree:"
  
      move-object/from16 v0, p2
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
  
+     .line 79
      move-object/from16 v0, p0
  
      iget-object v15, v0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
***************
*** 335,350 ****
--- 380,398 ----
      :try_end_1
      .catchall {:try_start_1 .. :try_end_1} :catchall_0
  
+     .line 80
      const/4 v2, 0x2
  
      :try_start_2
      new-array v8, v2, [I
  
+     .line 81
      .local v8, counts:[I
      new-instance v9, Landroid/util/SparseIntArray;
  
      invoke-direct {v9}, Landroid/util/SparseIntArray;-><init>()V
  
+     .line 82
      .local v9, pidCounts:Landroid/util/SparseIntArray;
      move-object/from16 v0, p0
  
***************
*** 362,373 ****
--- 410,424 ----
  
      invoke-virtual/range {v2 .. v9}, Landroid/content/ContentService$ObserverNode;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[ILandroid/util/SparseIntArray;)V
  
+     .line 83
      invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
  
+     .line 84
      new-instance v14, Ljava/util/ArrayList;
  
      invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V
  
+     .line 85
      .local v14, sorted:Ljava/util/ArrayList;,"Ljava/util/ArrayList<Ljava/lang/Integer;>;"
      const/4 v10, 0x0
  
***************
*** 379,384 ****
--- 430,436 ----
  
      if-ge v10, v2, :cond_1
  
+     .line 86
      invoke-virtual {v9, v10}, Landroid/util/SparseIntArray;->keyAt(I)I
  
      move-result v2
***************
*** 391,400 ****
--- 443,454 ----
      :try_end_2
      .catchall {:try_start_2 .. :try_end_2} :catchall_2
  
+     .line 85
      add-int/lit8 v10, v10, 0x1
  
      goto :goto_1
  
+     .line 75
      .end local v8           #counts:[I
      .end local v9           #pidCounts:Landroid/util/SparseIntArray;
      .end local v10           #i:I
***************
*** 415,420 ****
--- 469,475 ----
  
      goto :goto_0
  
+     .line 112
      :catchall_0
      move-exception v2
  
***************
*** 425,430 ****
--- 480,486 ----
      :try_end_4
      .catchall {:try_start_4 .. :try_end_4} :catchall_1
  
+     .line 65
      .end local v11           #identityToken:J
      :catchall_1
      move-exception v2
***************
*** 433,438 ****
--- 489,495 ----
  
      throw v2
  
+     .line 88
      .restart local v8       #counts:[I
      .restart local v9       #pidCounts:Landroid/util/SparseIntArray;
      .restart local v10       #i:I
***************
*** 448,453 ****
--- 505,511 ----
  
      invoke-static {v14, v2}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V
  
+     .line 102
      const/4 v10, 0x0
  
      :goto_2
***************
*** 457,462 ****
--- 515,521 ----
  
      if-ge v10, v2, :cond_2
  
+     .line 103
      invoke-virtual {v14, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
  
      move-result-object v2
***************
*** 467,472 ****
--- 526,532 ----
  
      move-result v13
  
+     .line 104
      .local v13, pid:I
      const-string v2, "  pid "
  
***************
*** 484,489 ****
--- 544,550 ----
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
  
+     .line 105
      invoke-virtual {v9, v13}, Landroid/util/SparseIntArray;->get(I)I
  
      move-result v2
***************
*** 498,511 ****
--- 559,575 ----
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
  
+     .line 102
      add-int/lit8 v10, v10, 0x1
  
      goto :goto_2
  
+     .line 107
      .end local v13           #pid:I
      :cond_2
      invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
  
+     .line 108
      const-string v2, " Total number of nodes: "
  
      move-object/from16 v0, p2
***************
*** 520,525 ****
--- 584,590 ----
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V
  
+     .line 109
      const-string v2, " Total number of observers: "
  
      move-object/from16 v0, p2
***************
*** 534,552 ****
--- 599,621 ----
  
      invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V
  
+     .line 110
      monitor-exit v15
      :try_end_5
      .catchall {:try_start_5 .. :try_end_5} :catchall_2
  
+     .line 112
      :try_start_6
      invoke-static {v11, v12}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
      :try_end_6
      .catchall {:try_start_6 .. :try_end_6} :catchall_1
  
+     .line 114
      monitor-exit p0
  
      return-void
  
+     .line 110
      .end local v8           #counts:[I
      .end local v9           #pidCounts:Landroid/util/SparseIntArray;
      .end local v10           #i:I
***************
*** 578,595 ****
      .end annotation
  
      .prologue
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.READ_SYNC_STATS"
  
!     const-string v4, "no permission to read the sync stats"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
--- 647,667 ----
      .end annotation
  
      .prologue
+     .line 429
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.READ_SYNC_STATS"
  
!     const-string/jumbo v4, "no permission to read the sync stats"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 431
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 433
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
***************
*** 606,611 ****
--- 678,684 ----
  
      move-result-object v2
  
+     .line 435
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
      return-object v2
***************
*** 624,650 ****
      .parameter "providerName"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 697,728 ----
      .parameter "providerName"
  
      .prologue
+     .line 353
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 355
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 357
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 358
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 359
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 655,672 ****
--- 733,755 ----
  
      move-result v3
  
+     .line 363
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 365
      :goto_0
      return v3
  
+     .line 363
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 365
      const/4 v3, -0x1
  
      goto :goto_0
  
+     .line 363
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 680,706 ****
      .locals 6
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 763,794 ----
      .locals 6
  
      .prologue
+     .line 384
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 386
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 388
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 389
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 390
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 711,728 ****
--- 799,821 ----
  
      move-result v3
  
+     .line 393
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 395
      :goto_0
      return v3
  
+     .line 393
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 395
      const/4 v3, 0x0
  
      goto :goto_0
  
+     .line 393
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 750,767 ****
      .end annotation
  
      .prologue
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string v4, "no permission to read the sync settings"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
--- 843,863 ----
      .end annotation
  
      .prologue
+     .line 341
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string/jumbo v4, "no permission to read the sync settings"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 343
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 345
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
***************
*** 778,783 ****
--- 874,880 ----
  
      move-result-object v2
  
+     .line 348
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
      return-object v2
***************
*** 794,809 ****
--- 891,909 ----
      .locals 4
  
      .prologue
+     .line 276
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 278
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 279
      .local v2, syncManager:Landroid/content/SyncManager;
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncAdapterTypes()[Landroid/content/SyncAdapterType;
      :try_end_0
***************
*** 811,816 ****
--- 911,917 ----
  
      move-result-object v3
  
+     .line 281
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
      return-object v3
***************
*** 830,856 ****
      .parameter "providerName"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 931,962 ----
      .parameter "providerName"
  
      .prologue
+     .line 286
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to read the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 288
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 290
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 291
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 292
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 861,878 ****
--- 967,989 ----
  
      move-result v3
  
+     .line 296
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 298
      :goto_0
      return v3
  
+     .line 296
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 298
      const/4 v3, 0x0
  
      goto :goto_0
  
+     .line 296
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 888,914 ****
      .parameter "authority"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 999,1030 ----
      .parameter "authority"
  
      .prologue
+     .line 440
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string/jumbo v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 442
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 444
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 445
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 446
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 919,936 ****
--- 1035,1057 ----
  
      move-result-object v3
  
+     .line 450
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 452
      :goto_0
      return-object v3
  
+     .line 450
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 452
      const/4 v3, 0x0
  
      goto :goto_0
  
+     .line 450
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 946,972 ****
      .parameter "authority"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 1067,1098 ----
      .parameter "authority"
  
      .prologue
+     .line 413
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string/jumbo v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 415
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 417
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 418
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 419
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 977,994 ****
--- 1103,1125 ----
  
      move-result v3
  
+     .line 423
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 425
      :goto_0
      return v3
  
+     .line 423
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 425
      const/4 v3, 0x0
  
      goto :goto_0
  
+     .line 423
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1004,1030 ****
      .parameter "authority"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 1135,1166 ----
      .parameter "authority"
  
      .prologue
+     .line 456
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.READ_SYNC_STATS"
  
!     const-string/jumbo v5, "no permission to read the sync stats"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 458
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 460
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 461
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 462
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 1035,1052 ****
--- 1171,1193 ----
  
      move-result v3
  
+     .line 465
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 467
      :goto_0
      return v3
  
+     .line 465
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 467
      const/4 v3, 0x0
  
      goto :goto_0
  
+     .line 465
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1064,1069 ****
--- 1205,1211 ----
      .parameter "syncToNetwork"
  
      .prologue
+     .line 162
      const-string v1, "ContentService"
  
      const/4 v2, 0x2
***************
*** 1074,1079 ****
--- 1216,1222 ----
  
      if-eqz v1, :cond_0
  
+     .line 163
      const-string v1, "ContentService"
  
      new-instance v2, Ljava/lang/StringBuilder;
***************
*** 1122,1138 ****
--- 1265,1284 ----
  
      invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
  
+     .line 168
      :cond_0
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v10
  
+     .line 170
      .local v10, identityToken:J
      :try_start_0
      new-instance v6, Ljava/util/ArrayList;
  
      invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V
  
+     .line 171
      .local v6, calls:Ljava/util/ArrayList;,"Ljava/util/ArrayList<Landroid/content/ContentService$ObserverCall;>;"
      move-object/from16 v0, p0
  
***************
*** 1144,1149 ****
--- 1290,1296 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_1
  
+     .line 172
      :try_start_1
      move-object/from16 v0, p0
  
***************
*** 1159,1173 ****
--- 1306,1323 ----
  
      invoke-virtual/range {v1 .. v6}, Landroid/content/ContentService$ObserverNode;->collectObserversLocked(Landroid/net/Uri;ILandroid/database/IContentObserver;ZLjava/util/ArrayList;)V
  
+     .line 174
      monitor-exit v19
      :try_end_1
      .catchall {:try_start_1 .. :try_end_1} :catchall_0
  
+     .line 175
      :try_start_2
      invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
  
      move-result v14
  
+     .line 176
      .local v14, numCalls:I
      const/4 v9, 0x0
  
***************
*** 1175,1180 ****
--- 1325,1331 ----
      :goto_0
      if-ge v9, v14, :cond_4
  
+     .line 177
      invoke-virtual {v6, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
  
      move-result-object v16
***************
*** 1183,1188 ****
--- 1334,1340 ----
      :try_end_2
      .catchall {:try_start_2 .. :try_end_2} :catchall_1
  
+     .line 179
      .local v16, oc:Landroid/content/ContentService$ObserverCall;
      :try_start_3
      move-object/from16 v0, v16
***************
*** 1195,1200 ****
--- 1347,1353 ----
  
      invoke-interface {v1, v2}, Landroid/database/IContentObserver;->onChange(Z)V
  
+     .line 180
      move-object/from16 v0, v16
  
      iget-object v1, v0, Landroid/content/ContentService$ObserverCall;->mObserver:Landroid/database/IContentObserver;
***************
*** 1207,1212 ****
--- 1360,1366 ----
  
      invoke-interface {v1, v0, v2}, Landroid/database/IContentObserver;->onChangeUri(Landroid/net/Uri;Z)V
  
+     .line 181
      const-string v1, "ContentService"
  
      const/4 v2, 0x2
***************
*** 1217,1222 ****
--- 1371,1377 ----
  
      if-eqz v1, :cond_1
  
+     .line 182
      const-string v1, "ContentService"
  
      new-instance v2, Ljava/lang/StringBuilder;
***************
*** 1243,1249 ****
  
      move-result-object v2
  
!     const-string v3, "update at "
  
      invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
  
--- 1398,1404 ----
  
      move-result-object v2
  
!     const-string/jumbo v3, "update at "
  
      invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
  
***************
*** 1264,1275 ****
--- 1419,1432 ----
      .catchall {:try_start_3 .. :try_end_3} :catchall_1
      .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
  
+     .line 176
      :cond_1
      :goto_1
      add-int/lit8 v9, v9, 0x1
  
      goto :goto_0
  
+     .line 174
      .end local v9           #i:I
      .end local v14           #numCalls:I
      .end local v16           #oc:Landroid/content/ContentService$ObserverCall;
***************
*** 1286,1291 ****
--- 1443,1449 ----
      :try_end_5
      .catchall {:try_start_5 .. :try_end_5} :catchall_1
  
+     .line 209
      .end local v6           #calls:Ljava/util/ArrayList;,"Ljava/util/ArrayList<Landroid/content/ContentService$ObserverCall;>;"
      :catchall_1
      move-exception v1
***************
*** 1294,1299 ****
--- 1452,1458 ----
  
      throw v1
  
+     .line 184
      .restart local v6       #calls:Ljava/util/ArrayList;,"Ljava/util/ArrayList<Landroid/content/ContentService$ObserverCall;>;"
      .restart local v9       #i:I
      .restart local v14       #numCalls:I
***************
*** 1301,1306 ****
--- 1460,1466 ----
      :catch_0
      move-exception v8
  
+     .line 185
      .local v8, ex:Landroid/os/RemoteException;
      :try_start_6
      move-object/from16 v0, p0
***************
*** 1311,1316 ****
--- 1471,1477 ----
      :try_end_6
      .catchall {:try_start_6 .. :try_end_6} :catchall_1
  
+     .line 186
      :try_start_7
      const-string v1, "ContentService"
  
***************
*** 1318,1323 ****
--- 1479,1485 ----
  
      invoke-static {v1, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
  
+     .line 187
      move-object/from16 v0, v16
  
      iget-object v1, v0, Landroid/content/ContentService$ObserverCall;->mObserver:Landroid/database/IContentObserver;
***************
*** 1326,1331 ****
--- 1488,1494 ----
  
      move-result-object v7
  
+     .line 188
      .local v7, binder:Landroid/os/IBinder;
      move-object/from16 v0, v16
  
***************
*** 1336,1346 ****
--- 1499,1511 ----
  
      move-result-object v13
  
+     .line 190
      .local v13, list:Ljava/util/ArrayList;,"Ljava/util/ArrayList<Landroid/content/ContentService$ObserverNode$ObserverEntry;>;"
      invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
  
      move-result v15
  
+     .line 191
      .local v15, numList:I
      const/4 v12, 0x0
  
***************
*** 1348,1359 ****
--- 1513,1526 ----
      :goto_2
      if-ge v12, v15, :cond_3
  
+     .line 192
      invoke-virtual {v13, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
  
      move-result-object v17
  
      check-cast v17, Landroid/content/ContentService$ObserverNode$ObserverEntry;
  
+     .line 193
      .local v17, oe:Landroid/content/ContentService$ObserverNode$ObserverEntry;
      move-object/from16 v0, v17
  
***************
*** 1365,1381 ****
--- 1532,1553 ----
  
      if-ne v1, v7, :cond_2
  
+     .line 194
      invoke-virtual {v13, v12}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
  
+     .line 195
      add-int/lit8 v12, v12, -0x1
  
+     .line 196
      add-int/lit8 v15, v15, -0x1
  
+     .line 191
      :cond_2
      add-int/lit8 v12, v12, 0x1
  
      goto :goto_2
  
+     .line 199
      .end local v17           #oe:Landroid/content/ContentService$ObserverNode$ObserverEntry;
      :cond_3
      monitor-exit v2
***************
*** 1396,1413 ****
--- 1568,1589 ----
      :try_start_8
      throw v1
  
+     .line 202
      .end local v8           #ex:Landroid/os/RemoteException;
      .end local v16           #oc:Landroid/content/ContentService$ObserverCall;
      :cond_4
      if-eqz p4, :cond_5
  
+     .line 203
      invoke-direct/range {p0 .. p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v18
  
+     .line 204
      .local v18, syncManager:Landroid/content/SyncManager;
      if-eqz v18, :cond_5
  
+     .line 205
      const/4 v1, 0x0
  
      invoke-virtual/range {p1 .. p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
***************
*** 1420,1429 ****
--- 1596,1607 ----
      :try_end_8
      .catchall {:try_start_8 .. :try_end_8} :catchall_1
  
+     .line 209
      .end local v18           #syncManager:Landroid/content/SyncManager;
      :cond_5
      invoke-static {v10, v11}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 211
      return-void
  .end method
  
***************
*** 1440,1445 ****
--- 1618,1624 ----
      .end annotation
  
      .prologue
+     .line 120
      :try_start_0
      invoke-super {p0, p1, p2, p3, p4}, Landroid/content/IContentService$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
      :try_end_0
***************
*** 1449,1468 ****
--- 1628,1651 ----
  
      return v1
  
+     .line 121
      :catch_0
      move-exception v0
  
+     .line 124
      .local v0, e:Ljava/lang/RuntimeException;
      instance-of v1, v0, Ljava/lang/SecurityException;
  
      if-nez v1, :cond_0
  
+     .line 125
      const-string v1, "ContentService"
  
      const-string v2, "Content Service Crash"
  
      invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
  
+     .line 127
      :cond_0
      throw v0
  .end method
***************
*** 1474,1483 ****
--- 1657,1668 ----
      .parameter "observer"
  
      .prologue
+     .line 139
      if-eqz p3, :cond_0
  
      if-nez p1, :cond_1
  
+     .line 140
      :cond_0
      new-instance v0, Ljava/lang/IllegalArgumentException;
  
***************
*** 1487,1497 ****
--- 1672,1684 ----
  
      throw v0
  
+     .line 142
      :cond_1
      iget-object v7, p0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
  
      monitor-enter v7
  
+     .line 143
      :try_start_0
      iget-object v0, p0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
  
***************
*** 1513,1522 ****
--- 1700,1712 ----
  
      invoke-virtual/range {v0 .. v6}, Landroid/content/ContentService$ObserverNode;->addObserverLocked(Landroid/net/Uri;Landroid/database/IContentObserver;ZLjava/lang/Object;II)V
  
+     .line 147
      monitor-exit v7
  
+     .line 148
      return-void
  
+     .line 147
      :catchall_0
      move-exception v0
  
***************
*** 1534,1551 ****
      .parameter "extras"
  
      .prologue
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string v4, "no permission to write the sync settings"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
--- 1724,1744 ----
      .parameter "extras"
  
      .prologue
+     .line 330
      iget-object v2, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v3, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string/jumbo v4, "no permission to write the sync settings"
  
      invoke-virtual {v2, v3, v4}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 332
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 334
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
***************
*** 1560,1569 ****
--- 1753,1765 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 336
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 338
      return-void
  
+     .line 336
      :catchall_0
      move-exception v2
  
***************
*** 1577,1597 ****
--- 1773,1797 ----
      .parameter "callback"
  
      .prologue
+     .line 483
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 485
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 486
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      if-eqz p1, :cond_0
  
+     .line 487
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 1600,1610 ****
--- 1800,1813 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 490
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 492
      return-void
  
+     .line 490
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1621,1641 ****
--- 1824,1849 ----
      .parameter "extras"
  
      .prologue
+     .line 233
      invoke-static {p3}, Landroid/content/ContentResolver;->validateSyncExtrasBundle(Landroid/os/Bundle;)V
  
+     .line 236
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v7
  
+     .line 238
      .local v7, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v0
  
+     .line 239
      .local v0, syncManager:Landroid/content/SyncManager;
      if-eqz v0, :cond_0
  
+     .line 240
      const-wide/16 v4, 0x0
  
      const/4 v6, 0x0
***************
*** 1650,1660 ****
--- 1858,1871 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 244
      :cond_0
      invoke-static {v7, v8}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 246
      return-void
  
+     .line 244
      .end local v0           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v1
***************
*** 1671,1697 ****
      .parameter "syncable"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 1882,1913 ----
      .parameter "syncable"
  
      .prologue
+     .line 369
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 371
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 373
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 374
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 375
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 1700,1710 ****
--- 1916,1929 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 379
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 381
      return-void
  
+     .line 379
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1719,1745 ****
      .parameter "flag"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 1938,1969 ----
      .parameter "flag"
  
      .prologue
+     .line 399
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 401
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 403
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 404
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 405
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 1748,1758 ****
--- 1972,1985 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 408
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 410
      return-void
  
+     .line 408
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1769,1795 ****
      .parameter "sync"
  
      .prologue
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
--- 1996,2027 ----
      .parameter "sync"
  
      .prologue
+     .line 302
      iget-object v3, p0, Landroid/content/ContentService;->mContext:Landroid/content/Context;
  
      const-string v4, "android.permission.WRITE_SYNC_SETTINGS"
  
!     const-string/jumbo v5, "no permission to write the sync settings"
  
      invoke-virtual {v3, v4, v5}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
  
+     .line 304
      invoke-static {}, Landroid/content/ContentService;->clearCallingIdentity()J
  
      move-result-wide v0
  
+     .line 306
      .local v0, identityToken:J
      :try_start_0
      invoke-direct {p0}, Landroid/content/ContentService;->getSyncManager()Landroid/content/SyncManager;
  
      move-result-object v2
  
+     .line 307
      .local v2, syncManager:Landroid/content/SyncManager;
      if-eqz v2, :cond_0
  
+     .line 308
      invoke-virtual {v2}, Landroid/content/SyncManager;->getSyncStorageEngine()Landroid/content/SyncStorageEngine;
  
      move-result-object v3
***************
*** 1798,1808 ****
--- 2030,2043 ----
      :try_end_0
      .catchall {:try_start_0 .. :try_end_0} :catchall_0
  
+     .line 312
      :cond_0
      invoke-static {v0, v1}, Landroid/content/ContentService;->restoreCallingIdentity(J)V
  
+     .line 314
      return-void
  
+     .line 312
      .end local v2           #syncManager:Landroid/content/SyncManager;
      :catchall_0
      move-exception v3
***************
*** 1817,1824 ****
--- 2052,2061 ----
      .parameter "observer"
  
      .prologue
+     .line 151
      if-nez p1, :cond_0
  
+     .line 152
      new-instance v0, Ljava/lang/IllegalArgumentException;
  
      const-string v1, "You must pass a valid observer"
***************
*** 1827,1846 ****
--- 2064,2088 ----
  
      throw v0
  
+     .line 154
      :cond_0
      iget-object v1, p0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
  
      monitor-enter v1
  
+     .line 155
      :try_start_0
      iget-object v0, p0, Landroid/content/ContentService;->mRootNode:Landroid/content/ContentService$ObserverNode;
  
      invoke-virtual {v0, p1}, Landroid/content/ContentService$ObserverNode;->removeObserverLocked(Landroid/database/IContentObserver;)Z
  
+     .line 157
      monitor-exit v1
  
+     .line 158
      return-void
  
+     .line 157
      :catchall_0
      move-exception v0
  
